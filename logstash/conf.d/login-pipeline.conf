input {
  exec {
    command => "last -n 1"  # 'last' 명령어를 실행하여 로그인 기록을 출력
    interval => 60  # 1분 간격으로 실행
    codec => plain { charset => "UTF-8" }
  }
}

filter {
  # 'message'에서 불필요한 부분('wtmp begins')을 제거하는 filter
  mutate {
    gsub => [
      "message", "\n\nwtmp begins.*", ""  # 'wtmp begins'와 그 뒤의 부분 제거
    ]
  }

  # 'last' 명령어 출력을 처리하는 grok 패턴 정의
  grok {
    match => {
      "message" => "%{USERNAME:user}\s+%{WORD:tty}\s+%{IPV4:ip_address}\s+%{WORD:weekday}\s+%{MONTH:month}\s+%{NUMBER:day}\s+%{TIME:login_time}\s+(?:-\s+%{TIME:logout_time}|still logged in)\s*(?:\(%{GREEDYDATA:duration}\))?"
    }
  }

  # 'still logged in'인 경우를 처리하기 위해 'logout_time' 필드가 'still logged in'이면 로그아웃 시간이 없다고 설정
  if [logout_time] == "still logged in" {
    mutate {
      remove_field => ["logout_time"]  # 'logout_time' 필드 삭제
      add_field => { "logout_time" => "still logged in" }
    }
  }

  # timestamp 처리 및 추가 필터 적용
  mutate {
    rename => ["login_time", "timestamp"]
  }

  # 날짜 형식 변환: "Wed Dec 11 17:31" -> "MMM dd HH:mm:ss"
  date {
    match => ["timestamp", "MMM dd HH:mm:ss"]
    target => "timestamp"  # 기존 timestamp 필드를 덮어쓰도록 설정
    locale => "en"
  }
}

output {
  elasticsearch {
    hosts => ["http://localhost:9200"]
    index => "login-logs"
  }

  stdout { codec => rubydebug }
}

